/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

// Interfaces for individual schemas
export interface Order {
    /**
     * Format: int64
     * @example 10
     */
    id?: number;
    /**
     * Format: int64
     * @example 198772
     */
    petId?: number;
    /**
     * Format: int32
     * @example 7
     */
    quantity?: number;
    /** Format: date-time */
    shipDate?: string;
    /**
     * @description Order Status
     * @example approved
     * @enum {string}
     */
    status?: "placed" | "approved" | "delivered";
    complete?: boolean;
}

export interface Category {
    /**
     * Format: int64
     * @example 1
     */
    id?: number;
    /** @example Dogs */
    name?: string;
}

export interface User {
    /**
     * Format: int64
     * @example 10
     */
    id?: number;
    /** @example theUser */
    username?: string;
    /** @example John */
    firstName?: string;
    /** @example James */
    lastName?: string;
    /** @example john@email.com */
    email?: string;
    /** @example 12345 */
    password?: string;
    /** @example 12345 */
    phone?: string;
    /**
     * Format: int32
     * @description User Status
     * @example 1
     */
    userStatus?: number;
}

export interface Tag {
    /** Format: int64 */
    id?: number;
    name?: string;
}

export interface Pet {
    /**
     * Format: int64
     * @example 10
     */
    id?: number;
    /** @example doggie */
    name: string;
    category?: Category;
    photoUrls: string[];
    tags?: Tag[];
    /**
     * @description pet status in the store
     * @enum {string}
     */
    status?: "available" | "pending" | "sold";
}

export interface ApiResponse {
    /** Format: int32 */
    code?: number;
    type?: string;
    message?: string;
}

// Interfaces for request bodies
export interface PetRequestBody {
    content: {
        "application/json": Pet;
        "application/xml": Pet;
    };
}

export interface UserArrayRequestBody {
    content: {
        "application/json": User[];
    };
}

// Components interface
export interface Components {
    schemas: {
        Order: Order;
        Category: Category;
        User: User;
        Tag: Tag;
        Pet: Pet;
        ApiResponse: ApiResponse;
    };
    responses: never;
    parameters: never;
    requestBodies: {
        Pet: PetRequestBody;
        UserArray: UserArrayRequestBody;
    };
    headers: never;
    pathItems: never;
}

// Paths interface
export interface Paths {
    "/pet": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: Operations["updatePet"];
        post: Operations["addPet"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pet/findByStatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: Operations["findPetsByStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pet/findByTags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: Operations["findPetsByTags"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pet/{petId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: Operations["getPetById"];
        put?: never;
        post: Operations["updatePetWithForm"];
        delete: Operations["deletePet"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pet/{petId}/uploadImage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        post: Operations["uploadFile"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    // Add other paths similarly...
}

// Operations interface
export interface Operations {
    updatePet: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Pet;
                "application/xml": Pet;
                "application/x-www-form-urlencoded": Pet;
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Pet;
                    "application/xml": Pet;
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            404: { headers: { [name: string]: unknown }; content?: never };
            422: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    addPet: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Pet;
                "application/xml": Pet;
                "application/x-www-form-urlencoded": Pet;
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Pet;
                    "application/xml": Pet;
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            422: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    findPetsByStatus: {
        parameters: {
            query?: {
                status?: "available" | "pending" | "sold";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Pet[];
                    "application/xml": Pet[];
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    uploadFile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    additionalMetadata?: string;
                    file?: Blob;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": ApiResponse;
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    getPetById: {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                petId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Pet;
                    "application/xml": Pet;
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            404: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    updatePetWithForm: {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                petId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    name?: string;
                    status?: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": ApiResponse;
                };
            };
            405: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    findPetsByTags: {
        parameters: {
            query?: {
                tags?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Pet[];
                    "application/xml": Pet[];
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    deletePet: {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                petId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": ApiResponse;
                };
            };
            400: { headers: { [name: string]: unknown }; content?: never };
            404: { headers: { [name: string]: unknown }; content?: never };
            default: { headers: { [name: string]: unknown }; content?: never };
        };
    };
    // Add other operations similarly...
}

// Exporting the main types
export type Webhooks = Record<string, never>;
export type $Defs = Record<string, never>;